
# Do not choose a language; we provide our own build tools.
language: generic

# Caching so the next build will be fast too.
cache:
  directories:
  - "$HOME/.ghc"
  - "$HOME/.cabal"
  - "$HOME/.stack"

matrix:
  include:
  # # We grab the appropriate GHC and cabal-install versions from hvr's PPA. See:
  # # https://github.com/hvr/multi-ghc-travis
  # - env: BUILD=cabal GHCVER=7.10.3 CABALVER=1.22 HAPPYVER=1.19.5 ALEXVER=3.1.7 PKG_FLAGS="--flags=enablewebtests"
  #   compiler: ": #GHC 7.10.3"
  #   addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.3,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}

  # # version w/ no web test
  # - env: BUILD=cabal GHCVER=7.10.3 CABALVER=1.22 HAPPYVER=1.19.5 ALEXVER=3.1.7 PKG_FLAGS="--flags=-enablewebtests"
  #   compiler: ": #GHC 7.10.3"
  #   addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.3,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}

  # - env: BUILD=cabal GHCVER=8.0.1 CABALVER=1.24 HAPPYVER=1.19.5 ALEXVER=3.1.7 PKG_FLAGS="--flags=enablewebtests"
  #   compiler: ": #GHC 8.0.1"
  #   addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.1,happy-1.19.5,alex-3.1.7], sources: [hvr-ghc]}}

  # # Stack builds. Can pass in arbitrary Stack arguments via the ARGS
  # # variable, such as using --stack-yaml to point to a different file.

  # # no doctests for lts-3
  # - env: BUILD=stack STACK_VER="1.5.1" ARGS="--resolver lts-3 --stack-yaml stack-lts-3.yaml" PKG_FLAGS="--flag hup:enablewebtests"
  #   compiler: ": #stack 7.10.3"
  #   addons: {apt: {packages: [libgmp-dev], sources: [hvr-ghc]}}

  # #- env: BUILD=stack ARGS="--resolver lts-6" GHCVER=7.10.3 PKG_FLAGS="--flag hup:enablewebtests --flag hup:BuildStackBasedTests"
  # #  compiler: ": #stack 7.10.3"
  # #  addons: {apt: {packages: [libgmp-dev], sources: [hvr-ghc]}}

  # - env: BUILD=stack STACK_VER="1.5.1" ARGS="--resolver lts-7 --stack-yaml stack-lts-7.yaml" PKG_FLAGS="--flag hup:enablewebtests --flag hup:BuildStackBasedTests"
  #   compiler: ": #stack 8.0.1"
  #   addons: {apt: {packages: [libgmp-dev], sources: [hvr-ghc]}}

# use this one for github release
# stack 1.5.1 fails, w/ lts-11
  - env: BUILD=stack STACK_VER="1.9.3" ARGS="--resolver lts-11 --stack-yaml stack-lts-11.yaml" RELEASE="true" PKG_FLAGS="--flag hup:enablewebtests --flag hup:BuildStackBasedTests"
    compiler: ": #stack 8.0.1"
    addons: {apt: {packages: [libgmp-dev], sources: [hvr-ghc]}}

  # # Build on macOS in addition to Linux
  # - env: BUILD=stack STACK_VER="1.9.3" ARGS="--resolver lts-11 --stack-yaml stack-lts-11.yaml" PKG_FLAGS="--flag hup:enablewebtests --flag hup:BuildStackBasedTests"
  #   compiler: ": #stack default osx"
  #   os: osx


before_install:
# Using compiler above sets CC to an invalid value, so unset it
- unset CC
# Download and unpack the stack executable
- export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.local/bin:/opt/alex/$ALEXVER/bin:/opt/happy/$HAPPYVER/bin:$HOME/.cabal/bin:$PATH
- mkdir -p ~/.local/bin
- |

  printf '\n***BEFORE_INSTALL***\n'
  set -x
  pwd
  ls -al
  echo BUILD $BUILD
  echo STACK_VER $STACK_VER
  echo ARGS $ARGS
  echo PKG_FLAGS $PKG_FLAGS
  # set -e seems to cause stack setup to fail?
  set -u

  export LINUX64_STACK="https://github.com/commercialhaskell/stack/releases/download/v${STACK_VER}/stack-${STACK_VER}-linux-x86_64.tar.gz"
  export OSX_STACK="https://github.com/commercialhaskell/stack/releases/download/v${STACK_VER}/stack-${STACK_VER}-osx-x86_64.tar.gz"
  if [ `uname` = "Darwin" ]
  then
    travis_retry curl --insecure -L "${OSX_STACK}" | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
    stack setup
    stack install cabal-install
    export PATH=`stack path --compiler-bin`:$PATH
  else
    travis_retry curl -L "${LINUX64_STACK}" | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
    stack setup
    stack install cabal-install
  fi

  # Use the more reliable S3 mirror of Hackage
  mkdir -p $HOME/.cabal
  echo 'remote-repo: hackage.haskell.org:http://hackage.fpcomplete.com/' > $HOME/.cabal/config
  echo 'remote-repo-cache: $HOME/.cabal/packages' >> $HOME/.cabal/config

  set +eux
  set +o pipefail

- |

  printf '\n***BEFORE_INSTALL 2***\n'

  set -x

  pwd
  ls -al
  echo BUILD $BUILD
  echo STACK_VER $STACK_VER
  echo ARGS $ARGS
  echo PKG_FLAGS $PKG_FLAGS
  set -euo pipefail

  case "$BUILD" in
    stack)
      stack --version
      ;;
    cabal)
      cabal --version
      ghc --version
      travis_retry cabal update
      ;;
  esac

  set +eux
  set +o pipefail

install:
- echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
- if [ -f configure.ac ]; then autoreconf -i; fi
- |

  printf '\n***INSTALL***\n'

  set -x

  pwd
  ls -al
  echo BUILD $BUILD
  echo STACK_VER $STACK_VER
  echo ARGS $ARGS
  echo PKG_FLAGS $PKG_FLAGS
  set -euo pipefail

  case "$BUILD" in
    stack)
      stack --no-terminal --install-ghc $ARGS test $PKG_FLAGS --bench --only-dependencies
      ;;
    cabal)
      # Get the list of packages from the stack.yaml file
      PACKAGES=$(stack --install-ghc query locals | grep '^ *path' | sed 's@^ *path:@@')

      cabal install --only-dependencies --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES
      ;;
  esac

  set +eux
  set +o pipefail


script:
- |

  printf '\n***SCRIPT***\n'

  set -x

  pwd
  ls -al
  echo BUILD $BUILD
  echo STACK_VER $STACK_VER
  echo ARGS $ARGS
  echo PKG_FLAGS $PKG_FLAGS
  set -euo pipefail

  case "$BUILD" in
    stack)
      stack --no-terminal $ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps
      stack --no-terminal $ARGS exec hup -- --version
      stack $ARGS install
      # if on linux, we now actually try out the binary on a
      # random package (void).
      # on macos: doesn't seem to work, no idea why.
      if [ ! `uname` = "Darwin" ] ; then
        cd /tmp && stack unpack void-0.7.2
        cd /tmp/void-0.7.2 && stack $ARGS init && stack setup && stack build && hup packbuild && hup docbuild
        tar tf /tmp/void-0.7.2/void-0.7.2.tar.gz
        tar tf /tmp/void-0.7.2/void-0.7.2-docs.tar.gz
      fi
      ;;
    cabal)
      cabal install --flags="enablewebtests" --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES
      # TODO:  --show-details=always

      ORIGDIR=$(pwd)
      for dir in $PACKAGES
      do
        cd $dir
        cabal check
        cabal sdist
        PKGVER=$(cabal info . | awk '{print $2;exit}')
        SRC_TGZ=$PKGVER.tar.gz
        cd dist
        tar zxfv "$SRC_TGZ"
        cd "$PKGVER"
        cabal configure --enable-tests -v2 $PKG_FLAGS
        cabal build
        cabal test --show-details=always
        cd $ORIGDIR
      done
      ;;
  esac

  printf '\n***ENDING SCRIPT***\n'

  pwd
  ls -al
  echo BUILD $BUILD
  echo STACK_VER $STACK_VER
  echo ARGS $ARGS
  echo PKG_FLAGS $PKG_FLAGS

  set +eux
  set +o pipefail

before_deploy:
- PKGVER=$(cabal info . | head -n  1 | cut -d ' ' -f 2)
- SRC_TGZ=$PKGVER.tar.gz
- |

  printf '\n***BEFORE_DEPLOY***\n'

  set -x;

  pwd
  ls -al
  echo BUILD $BUILD
  echo STACK_VER $STACK_VER
  echo ARGS $ARGS
  echo PKG_FLAGS $PKG_FLAGS
  set -euo pipefail

  echo ${PKGVER}
  echo ${SRC_TGZ}
  ls -al;
  if [ ! -f "$SRC_TGZ" ] ; then
    stack sdist;
    distdir=`stack path --dist-dir`;
    cp $distdir/$SRC_TGZ .;
  fi
  ls -al "$SRC_TGZ"; true
  cp ~/.local/bin/hup .
  tar cf hup_linux_x86_64.tgz --gzip hup
  ls -al hup_linux_x86_64.tgz

  set +eux
  set +o pipefail

deploy:
  provider: releases
  file:
  - "$SRC_TGZ"
  - hup_linux_x86_64.tgz
  # overwrite: true
  api_key:
    # silver-meme secure key begins "Ki0t..."
    secure: Ki0t7bBVqTI2wqljf1qGXrVOgCNFQ03mblgZza5FsVAC35dwT9SJCYFdL7PmiNmG0ytWujdl0rqjAF/7S8mQcKdJrVAfj8ObT6ZyhxPTQekM3fALqlxCqHNeUuUT2r1p/fLTBNI52sTZaNsRixIMCgqd5onD4lgrSPSLwETJt8zxf+y9yQ+2JYTsY2k1mgPhgyAsgbWnO0xJXrxvekiz51u7UDUPV2e0ZUTb1vG+OvcZZ8ArfpMQLwJI4dDySpd99grl6SAcoS/mNPr/RYPaTGhmdKKRdS3jREhVanJGgZbd5jgs8TFsGO5NZWM4l1ACFQBcCEP6ZA6N/x/DpR9AufuFqW4kVkgDkWlGczrqcDgTkaKgJwfR3Q9hZu0weAKSoqmDppncapYhxAGNV0mzTdz24wx20v2ECtI25QcYQd7S22SJVDAvVRLQUtJJlAOQjjrDkCNCwTBClFcGoHyN2Qd/RaYql6B0ZPseHBs1SzNK/3H0ZGM3DFh9OTqM6jixwKSAgJexDWNHuNoIDqQxC/10ju2ObV+G2gwc1gW89xwCKl1zBS68WlOSiBbT6cd6r0WQl9CRB/FFxQY6tY2aI44cdsfFepETxdHCY6fDlhillfeRtwyL8Vi0K24utP/DhGfD2stGqgogREzIOlp+0LoV7amQV9fQ43gnG9Tmqws=
  on:
    #tags: true
    #all_branches: true
    repo: phlummox/silver-meme
    condition: $RELEASE = true
